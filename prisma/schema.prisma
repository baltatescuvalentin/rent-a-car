// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  email           String   @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  isAdmin         Boolean @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  favoriteIds     String[] @db.ObjectId

  accounts Account[]
  reservations Reservation[]
}


model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Car {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  maker String
  model String
  category String
  type String
  imgSrc String[]
  horsePower Int
  year Int
  color String
  seatsCount Int
  doorsCount Int
  fuel String
  availableCount Int
  price Int

  reservations Reservation[]
}

model Reservation {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  carId String @db.ObjectId  
  startDate DateTime
  endDate DateTime
  totalPrice Int
  createdAt DateTime @default(now())
  fullName String
  phoneNumber String
  email String
  remarks String
  gps Boolean
  babySeat Boolean
  childSeat Boolean
  wifi Boolean
  snowChains Boolean
  skiSupport Boolean
  bikeSupport Boolean

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  car Car @relation(fields: [carId], references: [id], onDelete: Cascade)
}

model CarOptions {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  carId String @db.ObjectId
  reservationId String @db.ObjectId
  gps Boolean
  babySeat Boolean
  childSeat Boolean
  wifi Boolean
  snowChains Boolean
  skiSupport Boolean
  bikeSupport Boolean

}